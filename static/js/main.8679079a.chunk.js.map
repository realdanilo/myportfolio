{"version":3,"sources":["data.js","components/Project.js","pages/Home.js","pages/About.js","pages/Contact.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["projects","id","name","url","github","description","stack","main","Project","project","className","map","st","i","key","m","rel","href","target","length","Home","data","About","Contact","withRouter","to","exact","activeClassName","App","path","render","rp","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8679079a.chunk.js","sourcesContent":["let projects = [\r\n    {\r\n        id: 5,\r\n        name: \"Roof Store Project\",\r\n        url: \"https://danilomera-roofstore.netlify.app/\",\r\n        github: \"https://github.com/realdanilo/roofstore\",\r\n        description: \"From design to live site, using static technology\",\r\n        stack: [\"HTML\", \"CSS\", \"Javascript\"],\r\n        main: [\"Mobile CSS\", \"Flexbox/Grid system\"]\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Beatles Website\",\r\n        url: \"https://danilomera-beatles.netlify.app/\",\r\n        github: \"\",\r\n        description: \"Mobile first Beatles static website. I added some widgets such as Spotify, Graph, and Concert feedback\",\r\n        stack: [\"HTML\", \"CSS\", \"Javascript\"],\r\n        main: [\"DOM manipulation\", \"CSS queries\", \"API\"]\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"YelpCamp+\",\r\n        url: \"https://danilocamp.herokuapp.com/\",\r\n        github: \"https://github.com/realdanilo/yelpcamp\",\r\n        description: \"I advance my bootcamp project and included extra features that optimizes the website, makes more dynamic, and relates to a real world app.\",\r\n        stack: [\"Node\", \"Express\", \"Mongo DB\", \"Bootstrap\", \"Passport\", \"Cloudinary\"],\r\n        main: [\"REST\", \"Authentication\", \"Admin settings\", \"Cascade Delete\", \"Geomaping\", \"API\"]\r\n\r\n    },\r\n\r\n\r\n    {\r\n        id: 4,\r\n        name: \"Recipe App\",\r\n        url: \"https://danilomera-recipe.netlify.app/\",\r\n        github: \"https://github.com/realdanilo/recipeapp\",\r\n        description: \"Use of modern React, routing, and context to build an amazing recipe app. Super optimized!\",\r\n        stack: [\"React\", \"Hooks\"],\r\n        main: [\"useReducer\", \"useContext\", \"customHooks\", \"Local Storage\"]\r\n\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Color App\",\r\n        url: \"https://danilomera-colorapp.netlify.app/\",\r\n        github: \"https://github.com/realdanilo/colorapp\",\r\n        description: \"Bootcamp project for React. Here I learned to use OOP with modern technology, translate old React to newest version, and build using MaterialUI\",\r\n        stack: [\"React\", \"Material UI\", \"NPM modules\"],\r\n        main: [\"OOP\", \"Routing\", \"Optimization/Memoization\", \"Life Cycle\", \"withStyles\"]\r\n    },\r\n\r\n]\r\nexport default projects","import React from 'react'\r\nimport '../css/Project.css'\r\nexport default function Project({ project }) {\r\n    const { name, url, github, description, stack, main } = project\r\n    return (\r\n        <div className=\"project-container\">\r\n            <h3 className=\"project-title\">{name}</h3>\r\n            <p>{description}</p>\r\n            <h5>Stack</h5>\r\n            <ul className=\"content\">\r\n                {stack.map((st, i) => <li key={i}>{st}</li>)}\r\n\r\n            </ul>\r\n            <h5>Main Features</h5>\r\n            <ul className=\"content\">\r\n                {main.map((m, i) => <li key={i}>{m}</li>)}\r\n            </ul>\r\n\r\n            <div className=\"project-links\">\r\n                <a rel=\"noopener noreferrer\" href={`${url}`} target=\"_blank\">Live</a>\r\n                {github.length > 1 && <a rel=\"noopener noreferrer\" href={`${github}`} target=\"_blank\">Github</a>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport data from '../data'\r\nimport Project from '../components/Project'\r\nimport '../css/Home.css'\r\nimport { AiFillGithub, AiFillLinkedin } from 'react-icons/ai'\r\nexport default function Home() {\r\n    return (\r\n        <>\r\n            <div className=\"main-container\">\r\n                <h3 className=\"projects\">Projects</h3>\r\n                <div className=\"project-grid\">\r\n                    {data.map((project, i) => <Project key={project.id} project={project} />)}\r\n                </div>\r\n                <div className=\"footer\"></div>\r\n            </div>\r\n            <div className=\"social\">\r\n                <a rel=\"noopener noreferrer\" href=\"https://github.com/realdanilo\" target=\"_blank\"><AiFillGithub /></a>\r\n                <a rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/danilomera/\" target=\"_blank\"> <AiFillLinkedin /></a>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AiFillHtml5 } from 'react-icons/ai'\r\nimport { FaCss3Alt, FaReact } from 'react-icons/fa'\r\nimport { SiJavascript, SiMongodb } from 'react-icons/si'\r\nimport '../css/About.css'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"about-container\">\r\n                <div className=\"me\">\r\n                    <h5>About Me</h5>\r\n                    <p>I am Software Developer located in Phoenix Area. My main stack expertise is MERN, but I also know MySQL and some python.</p>\r\n                    <p>I have an undergraduate in Business with a focus on Data Analytics. </p>\r\n                    <p> I strongly believe that I can help your organization because I have an understanding from differents sides: the business, the customer, and the IT world.</p>\r\n                </div>\r\n                <div className=\"stack-components\">\r\n                    <h5>Front End</h5>\r\n                    <p>HTML, CSS, JS, React, ejs</p>\r\n                    <h5>Back End</h5>\r\n                    <p>Node, Express, Mongo DB, MySQL</p>\r\n                    <h5>Tools</h5>\r\n                    <p>Git, Bash command, Slack </p>\r\n                    <h5>Other</h5>\r\n                    <p>Advance Excel(Macros), Power BI, Tableau, Lean/Kaizen </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"about-logos\">\r\n                <AiFillHtml5 /><FaCss3Alt /><SiJavascript /><FaReact /><SiMongodb />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AiFillLinkedin, AiFillGithub, AiOutlineMail } from 'react-icons/ai'\r\nimport '../css/Contact.css'\r\nexport default function Contact() {\r\n    return (\r\n        <div className=\"contact-container\">\r\n            <h3>You can find me at:</h3>\r\n            <a rel=\"noopener noreferrer\" href=\"https://github.com/realdanilo\" target=\"_blank\"><AiFillLinkedin /></a>\r\n            <a rel=\"noopener noreferrer\" href=\"https://github.com/realdanilo\" target=\"_blank\"><AiFillGithub /></a>\r\n            <a rel=\"noopener noreferrer\" href=\"mailto:danilomera.10@gmail.com\"><AiOutlineMail /></a>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { withRouter, NavLink, Link } from 'react-router-dom'\r\nimport '../css/Navbar.css'\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"logo\">\r\n                <Link to=\"/\" >Danilo Mera</Link>\r\n            </div>\r\n            <div className=\"links\">\r\n                <NavLink exact to=\"/about\" activeClassName=\"active-nav\">About</NavLink>\r\n                <NavLink exact to=\"/contact\" activeClassName=\"active-nav\">Contact</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar)","import React from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport Contact from './pages/Contact'\nimport Navbar from './components/Navbar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" render={(rp) => <Home {...rp} />} />\n        <Route exact path=\"/about\" render={(rp) => <About {...rp} />} />\n        <Route exact path=\"/contact\" render={(rp) => <Contact {...rp} />} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}